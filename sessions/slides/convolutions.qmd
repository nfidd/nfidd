---
title: "Delay distributions at the population level"
author: "Nowcasting and forecasting of infectious disease dynamics"
engine: knitr
format:
  revealjs:
    output: slides/introduction-to-biases-in-epidemiological-delays.html
    footer: "Delay distributions at the population level"
---

## Individual delays

If $f(t)$ is our delay distribution then

$$
p(y_i) = f(y_i - x_i)
$$

is the probability that *secondary* event of individual $i$ happens at time $y_i$ given its primary event happened at $x_i$.

## Population level counts

The expected number of individuals $S_t$ that have their secondary event at time $t$ can then be calculated as the sum of these probabilities

$$
S_t = \sum_i f_{t - x_i}
$$

. . .

**Note:** If $S_t$ is in discrete time steps then $f_t$ needs to be a discrete probability distribution.

## Population level counts

If the number of individuals $P_{t'}$ that have their primary event at time $t'$ then we can rewrite this as

$$
S_t = \sum_{t'} P_{t'} f_{t - t'}
$$

This operation is called a (discrete) **convolution** of $P$ with $f$.

We can use convolutions with the delay distribution that applies at the *individual* level to determine *population-level* counts.

## Example: infections to symptom onsets

![](figures/infections_onset_sketch.png)

## Why use a convolution, not individual delays?

- we don't always have individual data available
- we often model other processes at the population level (such as transmission) and so being able to model delays on the same scale is useful
- doing the computation at the population level requires fewer calculations (i.e. is faster)

::: {.fragment .fade-in}
- **however, a downside is that we won't have realistic uncertainty, especially if the number of individuals is small**
:::

## What if $f$ is continuous?

Having moved to the population level, we can't estimate individual-level event times any more.

Instead, we *discretise* the distribution (remembering that it is **double censored** - as both events are censored). 

This can be solved mathematically but in the session we will use simulation.

## `r fontawesome::fa("laptop-code", "white")` Your Turn {background-color="#447099" transition="fade-in"}

- Simulate convolutions with infection counts
- Discretise continuous distributions
- Estimate parameters numbers of infections from number of symptom onsets, using a convolution model

#

[Return to the session](../biases-in-delay-distributions)
